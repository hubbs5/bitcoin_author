[(A "Truly Stealthy" PGP would be one whose binary output is indistinguishablefrom noise.  PGP stripped of its message headers and length bytes comesclose to this objective, except that the high order byte of its encryptedsession key would have a non-uniform distribution(more info about "Stealth PGP"here).Eric Hughes proposedthat session keys be chosen in such a way that this was prevented.Here is an algorithm which would work.), Let L be a power of 256 above the modulus n.  For security let it be thenext power of 256 above n*(2^64) (e.g. as an MP number, L is 1 followedas many 0's as the size of n plus 8 bytes).Let t be the integerpart of L/n, so that L = n*t + s with s in [0,n).  Call the PGP IDEA sessionkey SK, and the encrypted version of that m = SK^e.  Now do these steps:, , To recover m, simply take the first log base 256 of L bytes (which isknown to the recipient if he knows it is for him) as M, and compute m = Mmod n., Using this algorithm with the current Stealth PGP would produce a"truly stealthy" version which I think would be indistinguishable fromrandom bytes without access to the receiver's private key., ]
[I agree with Anonymous that there are problems with the actual use ofdigital cash in the near term.  But it depends to some extent on whatproblem you are trying to solve., One concern I have is that the move to electronic payments will decreasepersonal privacy by making it easier to log and record transactions.Dossiers could be built up which would track the spending patterns ofeach of us., Already, when I order something over the phone or electronically usingmy Visa card, a record is kept of exactly how much I spent and where Ispent it.  As time goes on, more transactions may be done in this way,and the net result could be a great loss of privacy., Paying in cash is still possible through the mail, but it is insecure andinconvenient.  I think that the convenience of credit and debit cards willovercome most people's privacy concerns and that we will find ourselvesin a situation where great volumes of information exist about people'sprivate lives., This is a place that I could see digital cash playing a role.  Imagine aVisa-like system in which I am not anonymous to the bank.  In this model,imagine that the bank is granting me credit similar to a credit card.But instead of giving me just an account number which I read over the phoneor send in an email message, it gives me the right to request digital cashon demand., I keep some digital cash around and spend it for transactions as I describedin my previous posts.  When I get low I send some email to the bank and getsome more dcash.  Every month I send a check to the bank to cover my accountjust as I do with my credit cards.  My relations with the bank are verysimilar to my current relationships with the credit card companies: frequentwithdrawals and a single payment each month by check., This has several advantages over the system which we are heading towards.No records are kept of where I spend my money.  All the bank knows is howmuch I have withdrawn each month; I may or may not have spent it at thattime.  For some transactions (e.g. software) I could be anonymous to thevendor; for others the vendor might know my real address, but still no centrallocation is able to track everything I buy., (There is also a security advantage over the ridiculous current system inwhich knowing a 16 digit number and an expiration date allows anyone toorder anything in my name!), Furthermore, I don't see why this system could not be as legal ascurrent credit cards.  All that really differs in this system is theinability to track where users spend their money, and as far as I knowthis ability was never an important legal aspect of credit cards.Certainly nobody will admit today that the government has a vested interestin moving towards an environment in which every financial transaction istracked., Granted, this does not provide full anonymity.  It is still possible to seeroughly how much each person spends (although nothing stops a person fromwithdrawing much more cash than he will spend in a given month, exceptperhaps for interest expenses; but maybe he can lend the extra digicash itselfand gain interest on that to compensate).  And it is oriented around the samecustomer/vendor model that Anonymous criticized.  But I maintain that thismodel represents the majority of electronic transactions, today and in thenear future., It's worth noting that it is not trivial to become a merchant who canaccept credit cards.  I went through this with a business I had a coupleof years ago.  We were selling software through mail order, and this makesthe credit card companies very nervous.  There is so much phone fraud inwhich credit card numbers are accumulated over a few months, then largeamounts of charges made against them.  By the time the user receives hismonthly statement and complains, the vendor has disappeared.  In order toget our credit card terminal we went to a company which "helps" startupswith this.  They seemed like a pretty shady outfit, themselves.  We had tofudge our application to say that we'd be selling something like 50% ofthe units at trade shows, which apparently counted as over-the-counter sales.And we had to pay about $3,000 up front, as a bribe, it seemed.  Eventhen we probably couldn't have done it if we hadn't had an office in thebusiness district., Under the digital cash system, this might be less of a problem.  The mainproblem with digital cash is double-spending, and if you are willing to gowith online verification (reasonable for any business which is going to takeanything over several hours to deliver the merchandise) this can becompletely prevented.  So there is no longer any possibility of merchantscollecting credit card numbers for later fraud.  (You still have problemswith non-delivery of merchandise, though, so not all risks are eliminated.)This might eventually make the system more widely available than currentcredit cards., I don't know whether this system could be used to support illegal actions,tax evasion, gambling, or whatever.  That is not the purpose of thisproposal.  It does offer the prospect of improving personal privacy andsecurity, in a framework that might even be legal, and that's not bad., , hal@rain.org, , ]
[, PGP's library is quite portable, working on both big- and little-endianmachines, as well as machines with both 16- and 32-bit integers.It can be compiled in a mode which relies only on C code, or it canbe linked with an assembly language module customized for the particulartarget machine to provide higher speed.  Assembly language modulesship with PGP for a variety of targets., The library uses fixed-size buffers for its calculations.  This meansthere is a ceiling on the size of the numbers which can be used.  Thisceiling is determined at compile time, though, so special applicationscan build the library with large ceilings if desired., PGP's library and its source code in general is not public domain; it iscopyrighted by Philip Zimmermann, reachable at &amp;lt prz@acm.org&amp;gt .  PGP isreleased under licensing terms which, I believe, allow use of the sourcecode for non-commercial purposes.  It would be a good idea to talk to Philbefore using the code in any product destined for widespread release., , Any module which will use the mp functions should also include mpilib.h.All of these modules will also have to be compiled with the -D flag(s) usedby mpilib.c., , If you have one of these targets, add a -D flag for the symbol from theabove list to your compile command line.  For example, on an MS-DOS machine,add -DMSDOS to the command line.  (Actually, in most cases these symbolswill be automatically defined by the target's compiler or pre-processor.But it doesn't hurt to define them explicitly.)  Then you should also assemblethe corresponding assembly language file.  For MS-DOS it is 8086.asm;the proper choice for the other targets should be obvious from the filenames.Link the assembly language object module along with mpilib's object moduleinto your application., If you don't have one of these targets, mpilib.c can be built in a "portable"mode which will implement all functions in C.  To do this, define-DPORTABLE and -DMPORTABLE on the command line.  In addition, if you are ona big-endian machine (such as a sparc or 68000-based machine), you mustdefine -DHIGHFIRST as well.  Little-endian machines don't need an explicitdefine for endianness., In portable mode, PGP will default to 16-bit units.  If your target has32-bit ints, you can define -DUNIT32 to get considerably more efficientcode., Remember that these defines must be added to all modules which includempilib.h, in addition to mpilib.c.  (Note: in the PGP makefile you mayalso see other defines, -DDYN_ALLOC and -DSMALL_MEM.  These are not relevantto the mp library and are not necessary for this application.), , A better choice is UPTON for the purposes of a general-purpose library.You should edit mpilib.h to have it define UPTON instead of SMITH for yourparticular target architecture if you are using one of the pre-definedtargets.  If you are building with -DPORTABLE, you can either edit mpilib.hto change the default choice, or you can define -DUPTON on the command line., , , , , MP variables may either be declared locally or as global variables as withother types of C variables., PGP's mp library functions need to be called with the address of a mpvariable.  Since mp variables are declared as arrays in C, this meansyou can just pass the variable name.  For example, to add x2 to x1, youcould do:, , , , , PGP is missing a few functions that you would expect.  It does not havemodular addition and subtraction.  These should basically do A+B and thentest for the range 0..(M-1), and if out of range add or subtract M onceto bring it back into range.  Perhaps these will be added to a future versionof PGP., Some mp functions have parameters that are both inputs and outputs (e.g.mp_inc(r) increments r).  In other cases, though, the inputs are separatefrom the outputs.  In those cases you should not pass the same variableas both an input and an output parameter.  For example, you should not domp_mult (a, a, b) to get a *= b, because a is being used as both an inputand an output parameter.  Instead, you should do mp_mult (temp, a, b) andthen mp_move (a, temp)., Here are some useful PGP mpilib functions and what they do.  The MP numbersare r, r1, r2, etc; non-MP integers are i, j, etc., , To get access to the more general I/O functions in mpiio.c you must compileit with -DDEBUG.  This will allow you to call:, , , , One function which is lacking is something to convert an mp value to astring in memory.  display_in_base and mp_display always write to standardoutput.  These routines can be fairly easily modified to output to anincrementing pointer (*bp++) to get this effect if necessary., , , There are also some other calls in mpilib.c which I did not documentabove.  They are somewhat lower-level, mostly, but they might be usefulfor some purposes.  A little study of the code will reveal these routines., , ]
[, PGP's library is quite portable, working on both big- and little-endianmachines, as well as machines with both 16- and 32-bit integers.It can be compiled in a mode which relies only on C code, or it canbe linked with an assembly language module customized for the particulartarget machine to provide higher speed.  Assembly language modulesship with PGP for a variety of targets., The library uses fixed-size buffers for its calculations.  This meansthere is a ceiling on the size of the numbers which can be used.  Thisceiling is determined at compile time, though, so special applicationscan build the library with large ceilings if desired., PGP's library and its source code in general is not public domain; it iscopyrighted by Philip Zimmermann, reachable at &amp;lt prz@acm.org&amp;gt .  PGP isreleased under licensing terms which, I believe, allow use of the sourcecode for non-commercial purposes.  It would be a good idea to talk to Philbefore using the code in any product destined for widespread release., , Any module which will use the mp functions should also include mpilib.h.All of these modules will also have to be compiled with the -D flag(s) usedby mpilib.c., , If you have one of these targets, add a -D flag for the symbol from theabove list to your compile command line.  For example, on an MS-DOS machine,add -DMSDOS to the command line.  (Actually, in most cases these symbolswill be automatically defined by the target's compiler or pre-processor.But it doesn't hurt to define them explicitly.)  Then you should also assemblethe corresponding assembly language file.  For MS-DOS it is 8086.asm;the proper choice for the other targets should be obvious from the filenames.Link the assembly language object module along with mpilib's object moduleinto your application., If you don't have one of these targets, mpilib.c can be built in a "portable"mode which will implement all functions in C.  To do this, define-DPORTABLE and -DMPORTABLE on the command line.  In addition, if you are ona big-endian machine (such as a sparc or 68000-based machine), you mustdefine -DHIGHFIRST as well.  Little-endian machines don't need an explicitdefine for endianness., In portable mode, PGP will default to 16-bit units.  If your target has32-bit ints, you can define -DUNIT32 to get considerably more efficientcode., Remember that these defines must be added to all modules which includempilib.h, in addition to mpilib.c.  (Note: in the PGP makefile you mayalso see other defines, -DDYN_ALLOC and -DSMALL_MEM.  These are not relevantto the mp library and are not necessary for this application.), , A better choice is UPTON for the purposes of a general-purpose library.You should edit mpilib.h to have it define UPTON instead of SMITH for yourparticular target architecture if you are using one of the pre-definedtargets.  If you are building with -DPORTABLE, you can either edit mpilib.hto change the default choice, or you can define -DUPTON on the command line., , , , , MP variables may either be declared locally or as global variables as withother types of C variables., PGP's mp library functions need to be called with the address of a mpvariable.  Since mp variables are declared as arrays in C, this meansyou can just pass the variable name.  For example, to add x2 to x1, youcould do:, , , , , PGP is missing a few functions that you would expect.  It does not havemodular addition and subtraction.  These should basically do A+B and thentest for the range 0..(M-1), and if out of range add or subtract M onceto bring it back into range.  Perhaps these will be added to a future versionof PGP., Some mp functions have parameters that are both inputs and outputs (e.g.mp_inc(r) increments r).  In other cases, though, the inputs are separatefrom the outputs.  In those cases you should not pass the same variableas both an input and an output parameter.  For example, you should not domp_mult (a, a, b) to get a *= b, because a is being used as both an inputand an output parameter.  Instead, you should do mp_mult (temp, a, b) andthen mp_move (a, temp)., Here are some useful PGP mpilib functions and what they do.  The MP numbersare r, r1, r2, etc; non-MP integers are i, j, etc., , To get access to the more general I/O functions in mpiio.c you must compileit with -DDEBUG.  This will allow you to call:, , , , One function which is lacking is something to convert an mp value to astring in memory.  display_in_base and mp_display always write to standardoutput.  These routines can be fairly easily modified to output to anincrementing pointer (*bp++) to get this effect if necessary., , , There are also some other calls in mpilib.c which I did not documentabove.  They are somewhat lower-level, mostly, but they might be usefulfor some purposes.  A little study of the code will reveal these routines., , ]
[One of the key concepts widely used to describe PGP is the "web of trust".This brings to mind a network of connections between people who know andcommunicate with each other.  Two people who want to communicate can doso securely if there is a path of connections in the form of signed keysthat joins them., But this is not quite right.  The fundamental fact about PGP key signatures,which is often misunderstood, is this:, You can only communicate securely with someone whose key is signed by a personyou know, either personally or by reputation., In other words, if I want to communicate with joe@abc.com, I can only do soif one of the signators of his key is a person I know.  If not, I have no wayof judging the validity of his key., This belies simple interpretations of the "web of trust".  I may have signedA's key, A has signed B's, B has signed C's, C has signed D's, and D has signedJoe's, but this is of no value unless I know D.  Only then can I trust Joe'skey., This means that, in the "web" picture, I can only communicate securely withpeople who are at most two hops away in the web of connections.  I cancommunicate with the people I know, and I can communicate with the people theyknow, and that is it., This is unfortunate, because the simple web model ties into some famousresearch which suggests that any two people chosen at random are only abouthalf a dozen steps apart in the web of who-knows-whom connections.  (Thisresult is where the title of the movie "Six Degrees of Separation" comes from.)If you had a system which actually supported communications via such a webmodel, it actually would have hope of letting two people communicate who didnot have a very long chain between them.  But PGP, with a maximum chain lengthof two, will not allow this., What would have to be added in order to allow a true web of trust model to beused in a program like PGP?  Basically what is needed is some way to judgethe trustworthyness of signatures by people you don't know.  This would mostplausibly be provided by the people who had signed their keys.  For example,if there were another type of key signature which did not only vouch for theperson's identity, but also for his trustworthyness and care in signing keys,then a chain of such signatures could serve as the basis for a true web oftrust.  Obviously such signatures could not be given out nearly as easily asthe kind we have now, where a glance at some stranger's drivers' licence isoften all we get, but they could be given to close friends and those we knowand trust., More elaborate systems might include numerical ratings of trustworthinesswhich would help to estimate the strength of any given path.  The main pointis that some information of this kind would be needed in order to allowcommunication with people distant in the web of connections., Without this, I think we will continue to have problems with PGP being unableto validate keys of people we want to communicate with.  People will collecthuge laundry lists of signatures in the hopes that whoever wants tocommunicate with them will know one of those people.  Centralized key validatorswill appear (as in the case of the SLED service being started now, which willsign a key based on a signed check with your name on it).  The result may bea choice between using an unsigned key or using one signed by some facelessbureaucracy, which is no better than the original PEM conception., (People may be confused by this essay because they thought PGP worked thisway already.  PGP does have a follow-the-web model, but that is only forfollowing signatures.  In the example above, where I wanted to talk to Joeand there was a chain to him through A, B, C, and D, we have to firstsuppose that I know and trust all of A, B, C, and D.  Given that, what PGP cando is to determine whether I have valid keys for all of those people.  It willnotice that A has signed B's key, so it is valid.  I know B and told PGP hewas trustworthy, and he signed C's key, so therefore that one is valid.  Similarly, I know C and I know D so PGP can follow the chain through them.  Finally we come to Joe, whom I don't know, but because I know D and PGP followedthe web to determine that D's key is valid, PGP can determine that Joe's keyis valid.  But again, that was only because I knew D and everyone else inthe chain.  The bottom line is still that I can only communicate with peoplewho know someone I know.), , ]
[Revised 13 Mar 96, Here is an attempt to describe Chaum's digital cash from his paper,Untraceable Electronic Cash, by Chaum, Fiat, and Naor, from the Crypto88 proceedings.  This cash has the property that the user of the cashcan remain anonymous so long as she does not spend it more than once,but if she does double-spend then her identity is revealed., This is how it works in general terms:  Alice opens an account with abank non-anonymously.  She shows ID so that the bank knows who she is;both she and the bank know her account number.  When she withdraws cash,she goes to the bank or contacts them electronically and presents someproof of who she is and what her account number is, and the bank givesher some digital cash.  The digital cash is an information pattern,perhaps stored in a computer file on a smart card or magnetic disk.Later, she spends the digital cash by sending or giving it to Bob, amerchant.  Bob can check and verify that the cash must have come fromthe bank.  He accepts the cash if it is valid, giving Alice themerchandise.  Later, he sends the cash to the bank to be added to hisown account., Note that this much could basically be done with a simple RSA signature.The bank could give Alice a statement saying, "this is worth $1", signedby the bank's secret key.  Bob could verify that the statement was infact signed by the bank, and know therefore that no one else than thebank could have created that statement.  He accepts it and sends it tothe bank, which honors it since it recognizes its own signature., One problem with this trivial money is that double-spending can not bedetected or prevented since all the cash looks alike.  This can beremedied by having the cash include a unique serial number.  Now whenBob goes to accept the cash from Alice, he can call the bank and say,has anyone else deposited serial number 123456?  If not, he accepts thecash and deposits it.  This is called on-line electronic money; themerchant must check with the bank for each transaction., This improved simple system does not deserve to be called cash, though,because it lacks the distinguishing characteristic of digital cash: itis not anonymous.  When the bank sees money with serial number 123456being deposited, the bank recognizes that this was the same bill thatAlice withdrew.  The bank can therefore deduce that Alice spent themoney at Bob's, and from this kind of information a dossier could bebuilt up with all kinds of privacy-destroying information about her., To allow anonymity, we have to get into the mathematics.  What we wantis for Alice and the bank collectively to create an RSA signature fromthe bank that could not be forged, but one which the bank will notrecognize as coming from Alice.  This is the first thing Chaum's paperdiscusses., The money in this system is of the form (x, f(x)^(1/3)) mod n, where nis the bank's public modulus.  f() (and, below, g()) is a one-wayfunction, one which can be calculated easily but for which it isinfeasible to calculate the inverse.  It should also be infeasible tocome up with two different y,z such that f(y) = f(z).  Today there areseveral suitable choices for one-way functions, the most common beingthe MD5 algorithm from RSA, and the US government's Secure Hash Algorithm(SHA)., The reason the expression above would be accepted as cash is two-fold.First, only the bank can calculate anything ^ (1/3) mod n.  This isbasically the RSA signing operation for the exponent of 3.  Nobody elsecan find cube roots.  The reason f(x) is used is this.  Suppose weproposed that (x, x^(1/3)) should be the cash, for some random x,reasoning that only the bank could find the cube root of x.  Can you seehow to forge cash like this?  (Take a few moments and try to see how youcould construct a pair like this even if you can't take cube roots.), The answer is that it is easy to forge this by first choosing a randomy, and exhibiting the pair (y^3, y).  Now we have a number and then itscube root.  Yet we didn't have to take any cube roots to find it.That's why this kind of money would be no good., Chaum's system avoids this by taking the cube root of a one-way functionof x.  To forge it without taking a cube root you'd have to produce(finv(y^3),  y), which would match the above pattern, but you can'tinvert the one-way function like that.  So only the bank can createmoney of the proper form.  This can be thought of as the formal,mathematical form of my informal "money" above which was a digitallysigned note with a serial number.  Here, x is the serial number, andit's digitally signed in this special way.  Nothing more is needed., The nice thing about this money is that it allows for blinding, a methodof having the bank sign the value without knowing what value it issigning.  It works like this.  Alice chooses x, which will be the x inthe cash.  She calculates f(x), but instead of sending it to the bank tobe signed (raised to the 1/3 power) she first chooses a random number r,and sends f(x)*r^3 to the bank.  The bank takes this number to the 1/3power, getting r * f(x)^(1/3).  Remember, though, that the bank doesn'tsee r or f(x) separately, but just their product.  It doesn't know whatr or f(x) is.  They could each be anything, actually., The bank sends this r * f(x)^(1/3) back to Alice, and she divides it byr, which she knows.  This gives her f(x)^(1/3), and she puts thattogether with x to get her digital cash: (x, f(x)^(1/3)).  She has apiece of money which could only have been signed by the bank, yet thebank won't recognize it when it is deposited., Other, non-mathematical, things take place as this withdrawal goes on.Alice must prove her identity to the bank, as mentioned above.  And thebank will debit her account by the value of the cash.  In this system,we are assuming for simplicity that all cash has the same value.  In areal system, different values might be encoded by different exponentsthan 3., When Alice deposits the money, Bob must call the bank to make sure thatit hasn't been deposited before, this being an "on-line" system.Although the bank won't recognize x (it's never heard of it) it willremember all the x's which have been deposited and so can alert Bob ifthe money has been spent before.  Both Bob and the bank can verify thedigital signature on the money and so will honor it., All the material above takes up less than one page of Chaum's nine-pagepaper.  For Chaum, this much is trivial.  Now we get to the interestingpart.  Now we will see the scheme that allows double-spenders to losetheir anonymity.  This will allow for "off-line" electronic cash; Bobwill no longer have to check with the bank to see if the money hasalready been spent.  He accepts it from Alice knowing that if she doescheat, the bank will honor the cash and sue Alice to make up the loss., (To make this explanation easier to follow, I will describe a slightlysimplified version of Chaum's off-line cash.  The version I describerequires the use of a non-invertable one-way function as in the f() usedabove.  Chaum's version does not require as strong an assumption andprovides "unconditional" untraceability even if the one-way functionis broken.), Let's start with the form of the cash itself.  It is the product of k/2numbers, where k is a "security parameter" that affects the chance of acheater succeeding.  Each number is of the formg(xi,yi)^(1/3), where g is a two-argument one-way function similar to the fabove.  (The "xi", "yi", "ai", etc. here are separate values for each ifrom 0 to k/2.), xi and yi are like this:  xi = f(ai), where ai is a random number,and f is another one-way function.  yi is kind of complicated.  It isf(ai xor &amp;lt info&amp;gt ), where&amp;lt info&amp;gt , the key to this whole operation, is identifying informationabout Alice's account!  It is her account number concatenated with aserial number for the cash., Now, why go through all this?  Here's why.  If you could find out bothai and (ai xor &amp;lt info&amp;gt ), for some i, you would know Alice's identity.(Xor'ing them would produce &amp;lt info&amp;gt .)  When Alice double-spends, both aiand ai xor &amp;lt info&amp;gt  will be revealed., What happens when Alice spends the coin is this.  For each i from 0 tok/2 Bob chooses 0 or 1 at random.  If he chooses 1 he gets told ai andyi.If he chooses 0 he gets told (ai xor &amp;lt info&amp;gt ) and xi.This will let him check the signature on the money, as describedin more detail below., Notice that when Bob gets this information,he'll know a bunch of ai's, and he'll know abunch of (ai xor &amp;lt info&amp;gt )'s, but they are for different i's.  He doesn'tknow both ai and (ai xor &amp;lt info&amp;gt ) for any one i.  So he can't breakAlice's anonymity., When Bob deposits the money at the bank, he passes along the informationhe got from Alice regarding the ai's and such., Now, suppose Alice cheats.  She spends the money again somewhere else,at Charlie's.  Charlie goes through the same procedure as Bob, choosing0 or 1 at random for each value of i.  Here is the catch.  Since he ischoosing at random, it would be very unlikely that he will chooseexactly the same 0's and 1's that Bob chose.  (Here is where the size ofk matters - making it bigger makes it less likely that Charlie and Bobwill choose the same pattern of 0's and 1's.  But it makes thecalculations take longer.)  That means for one or more values of i,Charlie will probably choose a 0 where Bob chose a 1, or vice versa., Because of this, if Bob got ai for that i, Charlie will getai xor &amp;lt info&amp;gt .  Or if Bob got ai xor &amp;lt info&amp;gt , Charlie will get ai.Either way, when Charlie sends his record of this information to thebank, the bank will put Bob's and Charlie's information together and getboth ai and ai xor &amp;lt info&amp;gt .  Xor'ing these together reveals &amp;lt info&amp;gt , andAlice is caught!  This is the main idea., (Chaum suggests not just relying on random chance to make sure Bob andCharlieuse different sets of 1's and 0's.  At least some of the bits mightbe assigned to Bob and Charlie by the bank in such a way thateverybody gets a different number.This way it would be guaranteed that Bob and Charlie would chooseopposite values for some i.), The reason for the money to have the form it does is so that Bob cancheck that it is signed by the bank.  For each value of iAlice has to give him enough information to calculate xi and yi.If Bob choses a 1, she gives him ai and yi.  Given ai Bob cancalculate xi (=f(ai)), and with this and yi he can calculateg(xi,yi).If Bob chooses a 0, she gives him (ai xor &amp;lt info&amp;gt ), asdescribed before, and also xi.  Given (ai xor &amp;lt info&amp;gt ),Bob calculates yi (=f(ai xor &amp;lt info&amp;gt )), and with this and xi hecan calculate g(xi,yi)., So for each i, whether Bob gives a 0 or a 1 he gets enough informationto calculate g(xi,yi).  He multiplies these all together and confirmsthat they are equal to Alice's original "money" value when it is takento the 3rd power (recall the money was product of g(xi,yi)^(1/3) for alli).  Only the bank could have produced a signature on this one-wayfunction f whose arguments take this special form., One more complication exists.  (Well, actually, an almost infinitenumber of complications exist if you look hard enough.  But we'll justfocus on one more.)  Alice needs to get this special form of moneyfrom the bank in such a way that the bank won't recognize it.  Thatmeans she has to blind it.  But in this case the bank wants to be surethat the money is of the proper form when it signs it; in particular, itwants to make darned sure that Alice's &amp;lt info&amp;gt  which is buried deep inall of those f's of g's is actually the right one for her.  But sincethe bank can't see what it is signing, this is hard to do., Chaum uses cut-and-choose for this.  He has Alice prepare all these f'sand g's according to the form above, carefully embedding her ownincriminating &amp;lt info&amp;gt  in each one.  Then she multiplies each g(xi,yi) bya blinding factor ri^3 just like in the first cash.  These are what shesends to the bank to be signed., The trick, though, is that she sends twice as many as will be used.  Shesends k of them, but only k/2 will be used.  (That's why the loop aboveused k/2 as the limit.)  The bank chooses k/2 at random out of the k shesent as the ones which will actually be used.  Alice then has to sendthe blinding ri values for the ones which the bank didn't pick., The idea is that if Alice tries to cheat, embedding "Bozo" instead of"Alice" in that &amp;lt info&amp;gt  field, she's taking a chance.  First, to beuseful, she's going to have to embed it in a lot of &amp;lt info&amp;gt  fields fordifferent values of i.  When Bob and Charlie compare notes after shedouble-spends, every value of i for which they chose different 0's and1's, which will be on the average half of them, will reveal an &amp;lt info&amp;gt field.  If she only fakes a few, chances are her real identity willstill be revealed., But if she falsifies a great many of them, then when the bank chooseshalf, chances are at least some of the fake ones will be in the set thebank didn't choose.  Then when Alice has to reveal her blinding r's, thejig will be up.  The bank will un-blind all those g(xi,yi)'s whicharen't being used, and see the fake &amp;lt info&amp;gt  fields., This cut-and-choose methodology has the disadvantage that Alice has todo twice as much work in preparing the money, half of which will just bethrown away.  But it is a simple, "brute force" way to make sure thatblinding signatures are actually being done on properly-formed data., So, there you have it.  Anonymity as long as you don't cheat, anddouble-spenders get caught.  It's a little complicated but that's whatcomputers are for; Bob and Alice wouldn't do all this stuff by hand.Alice would push the "generate a money candidate" button and getsomething to be sent to the bank (lots of the new PDA's have infraredwireless communications that would be perfect for face-to-facetransactions).  Bob would push the "check money" button when Alice spentit and it would flash red or green.  As long as the calculations don'tactually take too much time, which they really wouldn't in this casedespite this long-winded explanation, the people involved can ignore thedetails., , , ]
[I agree with Anonymous that there are problems with the actual use ofdigital cash in the near term.  But it depends to some extent on whatproblem you are trying to solve., One concern I have is that the move to electronic payments will decreasepersonal privacy by making it easier to log and record transactions.Dossiers could be built up which would track the spending patterns ofeach of us., Already, when I order something over the phone or electronically usingmy Visa card, a record is kept of exactly how much I spent and where Ispent it.  As time goes on, more transactions may be done in this way,and the net result could be a great loss of privacy., Paying in cash is still possible through the mail, but it is insecure andinconvenient.  I think that the convenience of credit and debit cards willovercome most people's privacy concerns and that we will find ourselvesin a situation where great volumes of information exist about people'sprivate lives., This is a place that I could see digital cash playing a role.  Imagine aVisa-like system in which I am not anonymous to the bank.  In this model,imagine that the bank is granting me credit similar to a credit card.But instead of giving me just an account number which I read over the phoneor send in an email message, it gives me the right to request digital cashon demand., I keep some digital cash around and spend it for transactions as I describedin my previous posts.  When I get low I send some email to the bank and getsome more dcash.  Every month I send a check to the bank to cover my accountjust as I do with my credit cards.  My relations with the bank are verysimilar to my current relationships with the credit card companies: frequentwithdrawals and a single payment each month by check., This has several advantages over the system which we are heading towards.No records are kept of where I spend my money.  All the bank knows is howmuch I have withdrawn each month; I may or may not have spent it at thattime.  For some transactions (e.g. software) I could be anonymous to thevendor; for others the vendor might know my real address, but still no centrallocation is able to track everything I buy., (There is also a security advantage over the ridiculous current system inwhich knowing a 16 digit number and an expiration date allows anyone toorder anything in my name!), Furthermore, I don't see why this system could not be as legal ascurrent credit cards.  All that really differs in this system is theinability to track where users spend their money, and as far as I knowthis ability was never an important legal aspect of credit cards.Certainly nobody will admit today that the government has a vested interestin moving towards an environment in which every financial transaction istracked., Granted, this does not provide full anonymity.  It is still possible to seeroughly how much each person spends (although nothing stops a person fromwithdrawing much more cash than he will spend in a given month, exceptperhaps for interest expenses; but maybe he can lend the extra digicash itselfand gain interest on that to compensate).  And it is oriented around the samecustomer/vendor model that Anonymous criticized.  But I maintain that thismodel represents the majority of electronic transactions, today and in thenear future., It's worth noting that it is not trivial to become a merchant who canaccept credit cards.  I went through this with a business I had a coupleof years ago.  We were selling software through mail order, and this makesthe credit card companies very nervous.  There is so much phone fraud inwhich credit card numbers are accumulated over a few months, then largeamounts of charges made against them.  By the time the user receives hismonthly statement and complains, the vendor has disappeared.  In order toget our credit card terminal we went to a company which "helps" startupswith this.  They seemed like a pretty shady outfit, themselves.  We had tofudge our application to say that we'd be selling something like 50% ofthe units at trade shows, which apparently counted as over-the-counter sales.And we had to pay about $3,000 up front, as a bribe, it seemed.  Eventhen we probably couldn't have done it if we hadn't had an office in thebusiness district., Under the digital cash system, this might be less of a problem.  The mainproblem with digital cash is double-spending, and if you are willing to gowith online verification (reasonable for any business which is going to takeanything over several hours to deliver the merchandise) this can becompletely prevented.  So there is no longer any possibility of merchantscollecting credit card numbers for later fraud.  (You still have problemswith non-delivery of merchandise, though, so not all risks are eliminated.)This might eventually make the system more widely available than currentcredit cards., I don't know whether this system could be used to support illegal actions,tax evasion, gambling, or whatever.  That is not the purpose of thisproposal.  It does offer the prospect of improving personal privacy andsecurity, in a framework that might even be legal, and that's not bad., , hal@rain.org, , ]
[A lot of our discussion is influenced by the ideas of David Chaum.  Hepioneered technology which could protect individual privacy while allowingvery flexible sorts of credentials and guarantees.  He has also playeda big role in the various proposals for digital cash., But I think that Chaum has gone off in the wrong direction in the lastfew years.  More and more he is concentrating on protocols which relyon a tamper-proof, hardware implementation of a cryptographic protocolwhich he calls an "observer".  This observer chip would sit in yourcomputer (which could be a Newton-style PDA or a smart card) and wouldplay an important part in the exchanges of information, cash, or credentialswhich you would make with others.  The observer basically makes sure youare telling the truth in your transactions, that you are not double-spendingyour digital cash, or not claiming a credential which you don't have., Now, this approach has the obvious advantage that it allows solvingcertain problems which can't be solved otherwise.  There appears to beno way to provide for secure, off-line digital cash, for example, otherthan with something like an observer., But it has the equally obvious problem of relying on a tamper-proofchip as a necessary part of the protocol.  Recently it seems that manyof the papers out of his group are designed to explore observer-basedprotocols.  This means that these ideas are not useful for software-onlyimplementations.  One of the (relatively few) strengths that we and theforces we represent have is that free software can be spread very farand very fast, making it hard for those opposed to privacy to successfullystop our efforts.  Any technology based on special chips is going tolose these advantages., Another problem with the observer is psychological.  Although Chaum goesto great lengths to design his cryptographic protocols so that even acheating observer can learn effectively NOTHING about the computer userthat would compromise his privacy, people may still feel uncomfortableabout having a mechanical "conscience" in their pocket.  People want tofeel in control of their computers, and I think supporting this controlis a big part of the Cypherpunks philosophy., A related point is that there have already been comparisons on sci.cryptbetween Chaum's observers and the Clipper chip, in that both rely ontamper-resistant technology to implement features which are not entirelyin their owner's best interests.  Assuming we do manage to successfullydefeat Clipper, the taint of this association may increase resistance toobservers., I wish Chaum and his group would stop directing their efforts towardsprotocols which require an observer chip to be effective.  Granted,there are some things that don't work as nicely without observers.  ButI think that a realistic appraisal of the pros and cons suggests thatnon-observer protocols are more likely to further our ultimate goal ofpersonal privacy., , , ]
[It occurs to me that digital cash could be a collector's item.  Papermoney is widely collected, as are coins.  I got a book out of the libraryon old American paper money, and many of the old bills are startlinglybeautiful.  Interestingly, the old money is still legal tender so thereis a floor under the value of the bills that you collect., Until 1861, the U.S. did not issue any paper money, only coins.  In thosedays, paper money was issued by private banks (usually with state charters).The money was backed by dollars, coins, which the bank owned.  Unfortunately,capitalism is a dynamic system and in those days bank failures were no moreunusual than corporate failures are today.  When this happened, the bank'snotes became worthless.  Counterfeiting was also a big problem with thethousands of different banks issuing notes.  It is interesting to speculatethat digital cash might lead to an electronic system with some similaritiesto those old days., Collecting digital cash has some problems.  Collectors are generallyattracted to items that are beautiful, interesting, and rare.  Digitalcash is interesting enough, but its beauty is rather abstract.  Rarity isalso hard to evaluate; each individual note has a unique serial number,and what it has in common with other notes of its denomination is thebank key and the exponent.  Uncirculated notes are generally morevaluable than others in the paper world; with digital banknotes the onlyway to tell whether it has been "circulated" would be to have access tothe bank's database of spent notes, to verify that the note had never beendeposited., Rarity could be determined by the bank's key and exponent.  The Magic Moneysystem has a provision for the bank to periodically move to another set ofexponents to represent the same denominations (in order to keep the size ofthe note database from growing too large).  If banks would do this at regularintervals, then particularly the early issues would be relatively rare.  Onemight even have an early banknote notarized (digitally timestamped) so thatone could prove its value in later years., Beauty is harder to deal with.  Strictly speaking, digital cash is invisible,consisting only of an information pattern in RAM chips or on a disk.  Thenumbers which represent the cash can be printed out, though, and thisrepresentation could perhaps have some beauty.  Unfortunately, in my opinionseveral lines of random hex digits are not beautiful., I have been working on ideas to display the information in digital cash insome other way that is more esthetic.  It would be nice if the displaysomehow only worked for correctly signed cash notes, with forged cashnot displaying anything nice.  My general idea is to display a "fingerprint"of each individual banknote, something that is unique to that note andwhich has a sort of beauty., One idea I have worked on is to seed a 1-D cellular automaton with a bitpattern based on the digital cash.  This seed is then processed by theCA algorithm to produce some pattern, with each row being a function ofthe previous row.  My thought was to start the CA at the top and the bottomof the screen with the two different functions applied to the cash whichshould be equal if the cash validates (taking the number to the properexponent on one hand, and applying the MD5 hash of the serial number onthe other, for the case of magic money).  Then we work inwards with thetwo seeds.  Proper cash will produce a symmetrical pattern.  By choosinggood CA rules, the patterns will be different for each bill, some nicerthan others, leading to attractive fractal-looking patterns for many bills.When you wanted to "look at your money" you could run the program on thedigital cash.  People might even trade for especially attractive bills., A similar idea is to use the cash as the basis for some fractal algorithm.Many fractals have the property that most of the plane is plain, whileonly a fraction looks really fractal.  Digital cash has the property thatwhen exponentiated it leads to a number most of whose bits are fixed butwhich has a small number of varying bits.  If we had a mapping which tookthe fixed digicash bits onto the interesting parts of the fractal, thenfake cash would not produce pretty pictures, while real cash would producesome part of a beautiful fractal.  Again, you would have validation andbeauty being tied together., I've been doing some experiments with the first idea, hoping to producesomething nice.  With a little more thought I hope to come up with aviewer for your Magic Money that will bring out its natural beauty andrarity.  This will be a must for all serious collectors of digicash., , ]
[(Be aware that there are two independent proposals circulating both calledNetCash.), I just ftp'd, printed, and read the paper which Derek mentioned:, , They don't even do blinding of the cash.  Each piece of cash has aunique serial number which is known to the currency provider.  This wouldof course allow matching of withdrawn and deposited coins., "In particular, at the point that a client purchases coins from acurrency server by check, or cashes in coins, it is possible for thecurrency server to record which coins have been issued to a particularclient.  It is expected that currency servers will not do so, and itis likely that the agreement with clients will specifically preclude it.", Right.  It is expected that they will not do so.  I feel so much better now., These guys seem to have read the work in the field (they reference it)but they don't appear to have understood it or cared about it., , hal@rain.org, ]
[Hal Finney Essays: Patent Search on Blind Signatures, For more info send a message with just "help" in the body tospo_patent@spo.eds.com., , ]
[Sender: 74076.1041@compuserve.com, Tim May mentioned that not many people on the list have expressedinterest in the remailers, and it occurs to me that maybe peopledon't all share the vision of why this crypto technology is important., I'm trying to recall how I learned about the possibilities of thistechnology.  I recall reading "True Names" a few years ago.  Vinge hadhis netters exchanging mail anonymously.  The hero downloaded a bigbatch of messages from a BBS and tried decrypting all of them to seewhich were for him.  Okay, I thought, that would be a way of disguisingwhich messages you were _receiving_.  Then Vinge said something like"and using more elaborate techniques, the sender of a message couldbe hidden as well."  Hold on, I thought.  That will never work.  Ifthey tap your line, they're going to know exactly what messages you'resending.  Too bad.  Vinge had a clever idea going, but it's flawed., I only learned about Chaum's crypto stuff last year.  Somebody on theExtropians list mentioned PGP, and I'd always had a casual interestin crypto, so I downloaded it and played with it some.  I thought itwas great and really got into it in a big way., This got me interested in crypto in general, so I started doing somelibrary research.  When I found Chaum's stuff, it just blew me away.The first article I found, I think, was his CACM paper which is anoverview of many of the things that are possible.  I started trying totrack down other papers by Chaum.  Here were all the technologiesneeded to make Vinge's world work, technologies which Vinge apparentlyknew about long before I did., It seemed so obvious to me.  Here we are faced with the problems ofloss of privacy, creeping computerization, massive databases, morecentralization - and Chaum offers a completely different direction togo in, one which puts power into the hands of individuals rather thangovernments and corporations.  The computer can be used as a tool toliberate and protect people, rather than to control them.  Unlike theworld of today, where people are more or less at the mercy of creditagencies, large corporations, and governments, Chaum's approach balancespower between individuals and organizations.  Both kinds of groups areprotected against fraud and mistreatment by the other., Naturally, in today's society, with power allocated so disproportionately,such ideas are a threat to large organizations.  Balancing power wouldmean a net loss of power for them.  So no institution is going to pickup and champion Chaum's ideas.  It's going to have to be a grass-rootsactivity, one in which individuals first learn of how much power theycan have, and then demand it., Where do the remailers fit in?  They represent the "ground floor" of thishouse of ideas - the ability to exchange messages privately, withoutrevealing our true identities.  In this way we can engage in transactions,show credentials, and make deals, without government or corporate databasestracking our every move as they can today.  Only by securing the ability tocommunicate privately and anonymously can we take the next steps towardsa world in which we each have true ownership and control over informationabout our lives., Chaum's ACM paper is titled, provocatively, "Security Without Identification -Transaction Systems to Make Big Brother Obsolete."  The work we are doinghere, broadly speaking, is dedicated to this goal of making Big Brotherobsolete.  It's important work.  If things work out well, we may be ableto look back and see that it was the most important work we have ever done., , ]
[, Two people who wish to communicate privately can use PGP or some otherencryption system to hide the content of their messages.  But the factthat they are communicating with each other is still visible to manypeople: sysops at their sites and possibly at intervening sites, as wellas various net snoopers.  It would be natural for them to desire anadditional amount of privacy which would disguise who they were communicatingwith as well as what they were saying., Anonymous remailers make this possible.  By forwarding mail betweenthemselves through remailers, while still identifying themselves in the(encrypted) message contents, they have even more communications privacythan with simple encryption., (The Cypherpunk vision includes a world in which literally hundreds orthousands of such remailers operate.  Mail could be bounced throughdozens of these services, mixing in with tens of thousands of othermessages, re-encrypted at each step of the way.  This should make trafficanalysis virtually impossible.  By sending periodic dummy messages whichjust get swallowed up at some step, people can even disguise whenthey are communicating.), The more controversial vision associated with anonymous remailers isexpressed in such science fiction stories as "True Names", by VernorVinge, or "Ender's Game", by Orson Scott Card.  These depict worlds inwhich computer networks are in widespread use, but in which many peoplechoose to participate through pseudonyms.  In this way they can makeunpopular arguments or participate in frowned-upon transactions withouttheir activities being linked to their true identities.  It also allowspeople to develop reputations based on the quality of their ideas,rather than their job, wealth, age, or status., The idea here is that the ultimate solution to the low signal-to-noiseratio on the nets is not a matter of forcing people to "stand behind theirwords".  People can stand behind all kinds of idiotic ideas.  Rather,there will need to be developed better systems for filtering news andmail, for developing "digital reputations" which can be stamped on one'spostings to pass through these smart filters, and even applying thesereputations to pseudonyms.  In such a system, the fact that someone isposting or mailing pseudonymously is not a problem, since nuisance posterswon't be able to get through., Other advantages of this approach include its extension to electronicon-line transactions.  Already today many records are kept of ourfinancial dealings - each time we purchase an item over the phone usinga credit card, this is recorded by the credit card company.  In time,even more of this kind of information may be collected and possibly sold.One Cypherpunk vision includes the ability to engage in transactionsanonymously, using "digital cash", which would not be traceable to theparticipants.  Particularly for buying "soft" products, like music,video, and software (which all may be deliverable over the net eventually),it should be possible to engage in such transactions anonymously.  Sothis is another area where anonymous mail is important., We anticipate that computer networks will play a more and more importantrole in many parts of our lives.  But this increased computerization bringstremendous dangers for infringing privacy.  Cypherpunks seek to put intoplace structures which will allow people to preserve their privacy if theychoose.  No one will be forced to use pseudonyms or post anonymously.But it should be a matter of choice how much information a person choosesto reveal about himself when he communicates.  Right now, the nets don'tgive you that much choice.  We are trying to give this power to people., , ]
[What if you could make money by running a remailer?, Right now, most remailer operators are operating out of altruism.  Thisis good in a lot of ways but it has its problems, as recent events haveshown:, , I think there are some experiments in for-pay remailers that have beentried.  Sameer is, I think, charging for some services, althoughpaerhaps that was just for anonymous return addresses.  A long time agoKarl Barrus had a service which required pre-issued "digital postagestamps", but I don't think many people used it., The time may be ripe to look at this more seriously.  Several factors arecoming together:, , It is obviously difficult to operate a remailer service that charges ifother people are offering the equivalent service for free.  Since it ispretty easy to start up a remailer, the marginal cost to do so is low,hence the profits are low, too.  However, although it is easy to start aremailer, it is not so easy to keep one running in the face ofcomplaints from recipients of abusive mail or inappropriate posts;hassles from sysops, owners, net feeds, or others upwards in that greatchain of command; possible law enforcement problems when illegalcommunications occur; possible threats of lawsuits (such as from thescientologists when their sacred documents are posted), etc.  So weshould not be misled into thinking that running a remailer is cost free., On the other hand I should be clear that I would not expect to make akilling on this service.  Something on the order of a penny a messageseems reasonable just at a guess.  Maybe it should be a factor of 10higher or lower., One issue is of course the additional difficulty this will cause in theuse of the remailer.  There are several things to consider here.  On theone hand you could argue that it is already too difficult to use theremailers, and any additional hassles involved with including some kindof payment tokens would kill the market.  OTOH I can agree in spirit withthe sentiments expressed here recently about the low quality which seemsto characterize much of the use of the remailers., I don't look at messages, but occasionally I do see bounces, and veryfrequently they are ugly little flames or similar worthless material.Now, I hope that I am seeing the dregs, that the kinds of clueless peoplewho make the mistakes which cause me to see the messages are the onesleast likely to use the service in a worthwhile manner.  But still, it isdiscouraging.  In that context, maybe making the system a little harderto use would be worthwhile, in that it would screen out the casualharrasser.  (Or, more realistically, this might just keep theexceptionally motivated harrassers.), In any case, I think the presence of the remailer scripts can make usinga for-pay remailer not much more difficult than using a free one.  If thecost is as low as I suggested and the inclusion of payment tokens isnearly automatic, then adding costs should not have much negative impacton use, certainly not on meaningful, worthwhile use., And even a modest cost might arrest the wholesale spamming that Detweilerand/or the recent "Scythe" seem to love.  At least we would be paid forenduring the hassle of the complaints., Now, the next question is the details of the payment.  Frankly, I don'tthink any of the current systems are quite right for us due to ourspecial needs, but things are changing rapidly.  Let me describesomething about how they work., I know of two systems that are VISA/Mastercard based.  One is calledFirst Virtual (http://www.fv.com).They are oriented towards informationsales and say that they aren't for service providers, but in practice itlooked to me like they could be used for services.  When a customerwants to pay, he sends you his FV ID.  You send this to FV and they sendan email message to the customer asking whether he authorizes thepayment.  If he says "yes", FV credits your account.  You get a checkevery month.  Customers who always say "no" get booted out of the system(as do merchants who submit bogus bills).  They charge 29 cents plus 2percent per transaction, but merchants can batch up multiple orders by asingle customer before sending it in., There are a few problems with a system like this, many of which aresomewhat generic to our situation.  The most fundamental is that wedon't know who our customers are much of the time.  In fact, the wholepoint of the remailer network is that we not know that fact for any caseexcept the first hop in the chain.  If we required customers to exposetheir FV account ID at every hop, it would make it a lot easier to trackmessages through the network (even if the ID's were hidden in theencryption envelope it seems risky).  If we then sent a message to FVsaying that we needed to charge ID XXX, and FV responds with an email tothe person's home address, this offers more possibilities for tracing., One solution would be only to charge on entry into the remailer net.Perhaps remailer operators would even charge each other then, and the firstremailer would charge some larger amount to deal with a "typical" chainlength?  Many interesting possibilities here., Another issue is that the overhead charges by FV would require batchingup messages before submitting them.  Let me make clear that the batchmust consist all of charges to a single user.  It doesn't do any good tosend one message to FV asking them to please charge a penny to each of100 VISA accounts.  No, you would have to count messages from each user,separately, and when user XXX had sent, say, $1 worth of messages, youcould send in the request to FV and get back 70 or so cents., So this adds some overhead and record-keeping that we don't currentlyhave to do, although perhaps it is not so difficult.  But it would raisenew questions of authenticating FV ID's, and shares some of the negativeprivacy impacts and message linking issues mentioned above., The other VISA based system is called OpenMarket. I just read about ittonight so I don't know it as well(http://www.openmarket.com).  It ispretty tied to the WWW so it would not seem to work for us.  Customersget connected to a particular WWW server which authenticates them andcharges their VISA card appropriately, then they get redirected to themerchant with some kind of token that says they have paid., The NetBank (email to netbank-intro@agents.com) is a digital-cash likesystem.  Customers get tokens which are basically large secret numberswhich have a cash value.  They send them to the merchants, and themerchants then send them to the bank which credits their account.  TheNetBank sends you a check every month., The interesting thing is how customers buy the cash tokens.  One way isby connecting to a 900 number with your modem.  They charge the customer$10.00 and give him a digital cash token worth that much.  Another way isby faxing a check to them.  I wasn't clear on how you get the cash tokenback in that case; I guess they email it to you at an address youspecify.  From the privacy point of view, these are not that great; 900numbers have Automatic Number Identification so unless you are willing totramp out to a pay phone to get your cash then it could be linked to yourphone number.  And the fax system must have some kind of return addressthat would link to you., The other problem with NetBank is that the smallest denomination whichcan be spent is 25 cents.  Due to the cash-like nature of the tokens, Idon't see a natural way to accumulate several messages into one payment.Maybe we could layer our own low-value digital cash system on top ofNetBank, where users could buy our anonymous cash for 25 cents and getenough tokens for 25 messages, then we would settle amongst ourselves (oractually with the anon-mail-token bank).  Actually this might help withthe privacy problems, too.  Anonymous digital cash is heavily patented,though., With a cash-like system, each message would include a numeric token inthe header which is the digital cash.  The remailer would strip that outand send it in for credit.  This is a simple system and could be largelyautomatic.  However there are some tricky issues about cheaters re-usingcash., NetBank charges $4 per month, plus, for the 900-number-based cash, 20%off of face value., The last system I'll describe is David Chaum's DigiCash(http://www.digicash.com).Chaum is the inventor of digital cash andhe certainly knows his stuff, plus as I said he has the intellectualproperty pretty well sewed up patent-wise.  The DC payment system isalso WWW based at present.  The customer has to be running a specialprogram on his computer, separate from his web browser.  This programholds his digital cash, which is similar conceptually to the NetBankcash but more sophisticated cryptographically.  When he wants to buysomething, the merchant's web server makes a connection to thecustomer's DC program, and it transfers the cash to the merchant., DigiCash says they are planning an email based system but for now theiremphasis is on the WWW.  Right now they are only in beta and not usingreal money.  I don't know when they will be real and email based, and Idon't know if they have said what their commission will be.  But when thiscomes up it may be the best approach if small-value transactions can besupported.  DigiCash is fully anonymous in the sense that once a customerreceives the money, it is "blinded" in a special cryptographic way sothat the bank cannot associate it with that customer (and no one elsecan, either).  This kind of anonymity fits in very well with our remailerrequirements., Well, I know this is a lot of information to work through, but mostly Iwant people to be aware of the possibilities.  Most of this stuff isvery, very new, only weeks old, generally.  Probably over the next fewmonths we will see a lot more options appear.  I am confident that therewill soon be payment systems that would provide the technical basis forfee based remailing.  I don't expect anyone to get rich by this, but itmight help compensate for the risks we all face, and it might serve toimprove the quality of the remailer network., , ]
[I was riding the train tonight, re-reading some old crypto papers, includingChaum's Auscrypt paper on digital pseudonyms, credentials, and such.  Hedescribed a method for letting libraries catch people who don't returnlibrary books, while still preserving confidentiality of all transactions.It occured to me that a modified form of his idea could help curb abuseof remailers., Chaum's idea was pretty complicated, but I think a simpler approach couldwork using the existing Magic Money software.  One idea we have talked aboutto help curb abuse would be to simply charge digital postage for everymessage.  However, it was pointed out that in practice postage costs wouldprobably be so low that this would only help in extreme cases of volumeabuse., My idea is to have the coins not represent money, but to have them be"non-abuse tokens".  With every message would be included a non-abusetoken in the form that Magic Money uses when you exchange incomingmoney at the bank.  This is composed of the coin itself, plus what iscalled a "proto-coin" which is a blinded version of what will becomethe new coin.  The remailer would check the incoming non-abuse token tomake sure it hadn't been seen before, just like the bank does withMagic Money., However, it would not immediately sign and return the blinded proto-coin.Instead, it would hold onto it for a day or two to see if any complaintscame back about the message.  This would require remembering the outgoingmessage-ID along with the proto-coin, but nothing else would have to beremembered about the message, and of course with remailer chains the truesource of the message would be completely unknown., If no complaints come in (which is the case with the vast majority ofmessages, in my experience) the remailer would sign and publish the blindedproto-coin.  This would be put in some public place which was generallyavailable to all who might use the remailer.  The user who sent the messagewould be watching for this proto-coin and pick it up, un-blinding it withhis Magic Money software, to produce a new non-abuse token which he can useto send another message., If serious complaints do come in about the message, the remailer would notsign the proto-coin, and the sender would have lost a non-abuse token., The nice thing about this system is that it protects the privacy of the userof the remailer system.  With the Magic Money technology each non-abusetoken is blinded so there is no linkage possible between issuing of suchtokens and their use.  The big problem with the remailers now is that abusivemessages can't be addressed without trying to track down who sent them, whichis usually impossible.  This system addresses the problem without hurtinganyone's privacy., A couple of issues that I have glossed over would include how the non-abusetokens are issued in the first place.  There is the obvious danger that anabuser manages to keep getting new tokens by pretending to be a new netuser who would like to use the remailer.  Two solutions to this would befirst, to charge a significant sum for a handful of non-abuse tokens; thiswould be a one-time fee for non-abusers but could get expensive for thosewho abuse; or second, to only give non-abuse tokens to users who could beidentified by their True Names.  (This isn't a situation which needsmilitary-grade security; semi-secure methods of identifying true names should beadequate.), One other thing I suggested above which might seem a little controversialwas that the signed but still-blinded proto-coins could be made availablein the clear.  Since these are in the form r*f(x)^(1/d) where r, a randomnumber, is only known to the user who created the proto-coin, I think theyare effectively one-time-pad encrypted.  So I don't see any need for thesemessages to be hidden with a public key.  In fact, I don't think Magic Moneywould really need to have a public key for the user since it is only used toprotect these messages, and I don't think they need protection.  Commentsare welcome on this point., One last point involves the definition of abuse.  As far as I am concernedthat is up to the remailer operator.  Last week I got a very polite andworried letter from a girl wondering why she had received mail from myremailer inviting her to suck some guy's finger, except it wasn't his finger.(Despite our recent discussion of this list's implicit "X" rating I amreluctant to be more explicit.)  I don't get too many of these but I feelbad about them all the same.  My current approach is to add each person tothe list of blocked outgoing addresses, but I think the technology would allowfor a more effective solution., , ]
[Some people have argued that there is no way to prevent the use ofmultiple pseudonyms on the net, that it is possible today and that thenew crypto technologies will provide even easier techniques tomorrow., This is an oversimplification, as Tim May points out."Is-a-person" credentialscan be used to determine whether someone is a "True Name" or not,which is really what Larry Detweiler wanted to know.Here is one way they mightwork., (To make this clearer, it is best to think in terms of the equation,pseudonym == public key.  A pseudonym is a public key.  We think ofpseudonyms as being names, like "wonderer" or "sam hill", or perhapsas email addresses, like "hacker@univ.edu".  But from the point of viewof cryptography, these are just frills.  The important thing is the key.With a public key, a pseudonym can sign his messages, so that nobodyelse can successfully pretend to be him.  He can read messages sent tohim, messages which no one else can read.  If he has to switch emailaddresses he can do so and still maintain his identity by continuingto use the same key.  It is his key which is his real identity on thenet.  OK, back to the is-a-person credential:), An is-a-person credential could be structured identically to the digitalcoins used in Chaum's simple digital cash proposal.  You would go to thecredentialling agency and provide some unique form of identification,something that no one else could forge.  Today this might be a thumbprint,or in the future it could perhaps be a DNA scan.  However, you do not haveto identify yourself by name.  They don't need to know who you are; they onlyknow that you are a living, breathing human being, one whom they have notseen before.  (There could be more than one credentialling agency, but theywould all share a database of thumbprints or whatever.), You choose a special public key which you will use for all of your TrueName activities on the net.  This public key will be used to sign messageswhich you want to prove are from a real person.  Any message sent withthat signature is known to be from a True Name and not from a nym.  Onlyone True Name exists per person., Note that this True Name doesn't have to be your real name.  If you wantto always post under John Q. Public and use this special key for thatpurposes, you can do so.  But you won't be able to post under any othername, including your own, as a True Name, not unless you use that samekey.  And of course if you do, people will be able to know that you arethe same as John Q. Public since you are using the same signature key., The way this is established is that you take your True Name key, whichwe'll call TN, and do as was done for Chaum's cash: pass it througha one-way function f, and blind with a random number r^3: f(TN)*r^3.You give this to the credentiallying agency when you come in with yourthumbprint, and they sign it by taking the cube root.  This isf(TN)^(1/3) * r.  Back home, you divide by r, getting f(TN)^(1/3)., This is your True Name certificate.  You can submit it to a public keyregistry along with TN; anyone can calculate f(TN) and verify thecredentialling agency's signature.  People will therefore know that thiskey is the only one belonging to some real person which is signed inthis way.  Only one such key can exist for each person., So, if people claim to be posting under True Names, they can prove itvery easily, by using their True Name key, signed by a credentiallingagency.  People can still post under as many nyms as they want, but onlyone gets to call itself True., Note that this solution doesn't reveal very much about the person.Because the certificates are blinded by r^3 when they are signed, eventhe credentialling agency has no way of knowing which thumbprints areassociated with which True Name.  (So, actually, it wouldn't be a problemif the agency got your name and address when you came in - this stillcouldn't be linked with your postings if you didn't want it to be.)Nobody is forced to even use a True Name when they post; they could usenothing but nyms.  On the other hand, if people want to reserve certainconferences for True Names only, they can.  There is tremendous flexibilityto have as much or as little use of nyms as people want., So, people should not be so quick to claim that crypto can only be usedto increase anonymity.  It is a powerful technology that can be used toincrease our control over information in many ways.  Chaum's paperscontinue to amaze me with what is possible., , ]
[, Have people forgotten the Clipper proposal, with the possible follow-on tomake non-Clipper encryption illegal?  To the extent this proposal has beenor will be defeated, it will happen through political maneuvering, nottechnology., Have people forgotten the PGP export investigation?  Phil Zimmermann hasn't.He and others may be facing the prospect of ten years in prison if they werefound guilty of illegal export.  If anyone has any suggestions for how toescape from jail into cyberspace I'd like to hear about them., Mike's SecureDrive is a terrific program for protecting privacy.  Butif we want to keep keys secret from politically-motivated investigations,we have to rely on the very political and non-technological Fifth Amendment(an amendment which Mike Godwin of EFF and others contend does not actuallyprotect disclosure of cryptographic keys).  Again, we need to win political,not technological, victories in order to protect our privacy., I even question Mike's point about the government's inability to ban books.Look at the difficulty in keeping PGP available in this country even thoughit is legal.  Not only have FTP sites been steadily closed down, even thekey servers have as well.  And this is legal software.  , Sure, this software is currently available overseas, but that is becausePGP's only legal limitations are the U.S. patent issues.  Imagine how muchworse it would be if non-escrowed encryption were made illegal in a broadrange of countries, with stringent limits on net access to countries whichpromote illegal software?  Here again, these kinds of decisions will be madein the political realm., Fundamentally, I believe we will have the kind of society that most peoplewant.  If we want freedom and privacy, we must persuade others that theseare worth having.  There are no shortcuts.  Withdrawing into technologyis like pulling the blankets over your head.  It feels good for a while, untilreality catches up.  The next Clipper or Digital Telephony proposal willprovide a rude awakening., , ]
[I agree with Tim May's suggestion that it would be good if steganographyand cryptography tools were widely available, especially in light ofthe government's obvious hostility towards cryptography., But I can't agree that these tools will be sufficient to bring aboutTim's concept of "crypto anarchy", of "libertaria in cyberspace".  Ifwe really want to achieve these goals I think it will be necessary totake political action.  Technology alone will not be enough., After all, even today techniques exist which would in principle allowa digital cash system to develop.  Yet no such system exists.  Thereneeds to be an infrastructure, a network of bankers, sellers, users, andother participants.  All this will take time to develop even in the bestof cases., But if the government is actively fighting such technology, I don'tsee how Tim's proposed subterfuges with DAT's and CD's are going to beenough to overcome this additional barrier.  Without the ability topublically negotiate the tricky issues of standards and contracts, Idon't see how a financial infrastructure of the sophistication neededfor digital cash could arise., As another example, suppose the government banned non-Clipper cryptography.Despite the brave comments of some, I think it would be very hardto overcome such a ban.  Look at the problems PGP has had, faced merelywith the relatively weak threat of patent suits (patents which have not,to my knowledge, been tested in court).  PGP is constantly being taken offFTP sites based just on letters from the patent holders.  Even Tim himselfsuggested some time back that Cypherpunks should rethink support for PGPgiven the patent situation.  Imagine how much worse it would be if thegovernment actually could put people in jail for using PGP., My main point is that we cannot rely on the technology to save us.  Aconcerted government effort could, in my opinion, stifle the growth ofindividual liberties that cryptography may offer.  Clipper is just onebattle in this longer war.  We can't afford to fall victim to a smugconfidence that victory will inevitably be ours.  If we get to the pointthat steganography is the only way to communicate privately, we will havelost., , hal@rain.org, ]
[The one comment I'd make on the wolves vs sheep analogy is this.  In thereal world, there are both wolves and sheep.  Violence and coercion are partof life.  Democracy, in a sense, recognizes the power implicit in largenumbers of people.  If they can't vote, they may revolt.  No libertariangovernment will survive without the acceptance of the masses., A populace willing to countenance a Libertarian society would perhaps bewise enough to be entrusted with democracy, anyway., , ]
